name: Run Tests with Android Emulator

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.15.0]

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Install Node.js dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Download and Set Up Android SDK
      - name: Set up Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -o android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -q android-sdk.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools" >> $GITHUB_ENV
          source $GITHUB_ENV

      # Step 5: Install Command Line Tools and System Images
      - name: Install Android tools and system images
        run: |
          sdkmanager --update
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0" "emulator" "system-images;android-35;google_apis;x86_64"
          echo "y" | sdkmanager --licenses

      # Step 6: Set up and start Android emulator
      - name: Start emulator
        run: |
          echo "no" | avdmanager create avd -n "Pixel_API_35" -d "pixel" -k "system-images;android-35;google_apis;x86_64"
          nohup emulator -avd Pixel_API_35 -no-snapshot -no-audio -no-window -gpu off &

      # Step 7: Wait for emulator to boot
      - name: Wait for emulator to boot
        run: |
          adb wait-for-device
          adb shell input keyevent 82

      # Step 8: Run Node.js tests
      - name: Run tests
        run: npm run test:emulator3

      # Step 9: Generate Allure report
      - name: Generate Allure report
        run: npm run allure:generate

      # Step 10: Upload Allure report
      - name: Upload Allure report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report
